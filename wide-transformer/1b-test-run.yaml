name: wide-transformer-scaling

integrations:
-
  integration_type: git_repo
  git_branch: wide-transformer-scaling
  git_repo: rishab-partha/llm-foundry
  pip_install: .[gpu]
  ssh_clone: false
-
  integration_type: wandb
  entity: mosaic-ml
  project: customer-project

image: mosaicml/pytorch:1.13.1_cu117-python3.10-ubuntu20.04
cluster: r7z2
gpu_type: a100_40gb
gpu_num: 64 # update for hero run

command: |-
  cd llm-foundry/scripts
  composer train/train.py /mnt/config/parameters.yaml || (echo "Command failed - killing python" && pkill python && exit 1)

parameters:
  global_seed: 17
  max_seq_len: 2048 # max tokens per sequence during training

  # Model
  model:
    name: mpt_causal_lm
    init_device: meta
    d_model: 2048
    n_heads: 16
    n_layers: 24
    expansion_ratio: 4 # update w/ spreadsheet
    max_seq_len: ${max_seq_len}
    vocab_size: 50368 # update for hero run with custom tokenizer
    no_bias: true
    attn_config:
      alibi: true
      attn_impl: triton
      clip_qkv: 6
      attn_uses_sequence_id: true

  # Tokenizer
  tokenizer:
    name: EleutherAI/gpt-neox-20b
    kwargs:
      model_max_length: ${max_seq_len}

  # Optimization
  global_train_batch_size: 512 # ~2M tokens, update for hero run, must be divisible by gpu_num
  max_duration: 26000ba # update for hero run, e.g. 500000ba ~= 1T tokens

  optimizer:
    name: decoupled_lionw
    lr: 0.0002
    betas:
    - 0.9
    - 0.95
    weight_decay: 0.0002

  scheduler:
    name: cosine_with_warmup
    t_warmup: 4000ba
    alpha_f: 0.1

  # System
  seed: ${global_seed}
  precision: amp_bf16
  device_train_microbatch_size: 8
  device_eval_batch_size: 8

  # FSDP
  fsdp_config:
    activation_checkpointing: false
    activation_checkpointing_reentrant: false
    activation_cpu_offload: false
    limit_all_gathers: true
    mixed_precision: PURE
    sharding_strategy: FULL_SHARD
    state_dict_type: full
    verbose: false

  # Logging
  eval_first: true
  eval_interval: 2000ba
  log_to_console: true
  console_log_interval: 100ba
  progress_bar: false
  python_log_level: DEBUG
  loggers:
    wandb: 
      group: ${run_name}
      project: wide-transformer
      tags:
      - 1B
      - wide-transformer
  run_name: 1B-wide-transformer-depth-24-expansion-4-test 

  # Checkpointing
  autoresume: true
  save_filename: ep{epoch}-ba{batch}/rank{rank}.pt
  save_folder: oci://mosaicml-internal-checkpoints/rishab/wide-transformer/1b-runs/${run_name}-seed-${global_seed} # update for hero run
  save_interval: 2000ba # update for hero run, e.g. 2000ba
  save_num_checkpoints_to_keep: 1

  # Algos and Callbacks
  algorithms:
    gradient_clipping:
      clipping_threshold: 1
      clipping_type: norm

  callbacks:
    lr_monitor: {}
    memory_monitor: {}
    # mono_ckpt_saver:
    #   batch_interval: ${save_interval}
    #   filename: ep{epoch}-ba{batch}/mono.pt
    #   save_folder: ${save_folder}
    runtime_estimator: {}
    scheduled_gc:
      batch_interval: 2000
    speed_monitor:
      window_size: 1

  # Dataloaders
  eos_token_id: 0 # update for hero run with custom tokenizer
  num_canonical_nodes: 128 # update for hero run, must be codivisible by # physical nodes

  # Eval loader
  eval_loader:
    name: text
    drop_last: false
    num_workers: 8
    dataset:
      eos_token_id: ${eos_token_id}
      max_seq_len: ${max_seq_len}
      num_canonical_nodes: ${num_canonical_nodes}
      shuffle: false
      shuffle_algo: py1b
      shuffle_seed: ${global_seed}
      local: /tmp/dataset/val_c4
      remote: oci://mosaicml-internal-dataset-pile/preconcat-gpt_neox/
      split: val


  # In-context-learning tasks
  icl_tasks: 'eval/yamls/tasks.yaml'

  # Train loader
  train_loader:
    name: text
    drop_last: true
    num_workers: 8
    dataset:
      eos_token_id: ${eos_token_id}
      max_seq_len: ${max_seq_len}
      num_canonical_nodes: ${num_canonical_nodes}
      shuffle: true
      shuffle_algo: py1b
      shuffle_seed: ${global_seed}
      drop_last: true
      num_workers: 8
      streams:
        # @zack pls fill in